workflows:
  version: 2
  build:
    jobs:
      - build:
          filters:
            branches:
              only:
                - main
      - deploy:
          filters:
            branches:
              only:
                - main
          requires:
            - build

# This section defines the workflow:
# It runs the 'build' job first, then the 'deploy' job.
# Both jobs only run on the 'main' branch.
# The 'deploy' job waits for the 'build' job to complete successfully.

orbs:
  ruby: circleci/ruby@1.4.0
# This imports the CircleCI Ruby orb, which provides Ruby-specific functionality.
 
jobs:
  build:
    working_directory: ~/Pablos_school
    docker:
      - image: cimg/ruby:3.1.0
    steps:
      - checkout
      - setup_remote_docker
      # This sets up a remote Docker environment for building and pushing images.
      - run:
          name: docker-login
          command: docker login -u $DOCKERHUB_USERNAME -p $DOCKERHUB_PASSWORD
      # This logs into Docker Hub using credentials stored in CircleCI environment variables.
      - run:
          name: build-docker-image
          command: docker build -t $IMAGE_NAME . --build-arg SECRET_KEY_BASE=$SECRET_KEY_BASE 
      # This builds the Docker image, tagging it with $IMAGE_NAME and passing in the SECRET_KEY_BASE.
      - run:
          name: publish-docker-image
          command: docker push $IMAGE_NAME
      # This pushes the built Docker image to Docker Hub.
      - run:
          name: run-docker-image
          command: docker run -p 3000:3000 -d $IMAGE_NAME
      # This runs the Docker image, mapping port 3000 to test if it starts correctly.
  
  deploy:
    docker:
      - image: cimg/ruby:3.1.0
    steps:
      - run:
          name: deploy-application
          command: ssh -o StrictHostKeyChecking=no $EC2_USERNAME@$EC2_PUBLIC_DNS "export CONTAINER_NAME=\"$CONTAINER_NAME\"; export IMAGE_NAME=\"$IMAGE_NAME\"; rm -rf Pablos_school/; git clone https://github.com/PMM217/Pablos_School.git; source Pablos_school/deploy.sh"
      # This SSHs into the EC2 instance, sets environment variables, clones the latest code,
      # and runs a deploy script to update the application on the server.